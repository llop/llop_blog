<script type="text/javascript" language="javascript">$(function() { ajaxify('#get_vagones'); ajaxify('#get_vagones1'); ajaxify('#get_libre'); ajaxify('#anade_vagones'); adjust_overflow(); });</script>
<div style="text-align:left; padding:0px 15px 0px 15px;">
<pre><span class="comment">/** @brief Rellena las cocheras con los vagones de los trenes, siguiendo la politica descrita en el enunciado.
 *  Se informara de los trenes y sus respectivas horas de salida por el canal estandar de entrada.
 *  \pre La lista de cocheras esta ordenada por prioridad, y la de trenes por hora de llegada. Todos los trenes caben en las cocheras.
 *  \post Las cocheras contienen los vagones de los trenes indicados.
 */</span><span class="type">
void</span> Cjt_Cocheras<span class="operator">::</span>rellena_cocheras<span class="operator">(</span><span class="keyword">const</span> list<span class="operator">&lt;</span>Tren<span class="operator">&gt; &amp;</span>trenes<span class="operator">) {</span><span class="flow">
  for</span><span class="operator"> (</span>list<span class="operator">&lt;</span>Tren<span class="operator">&gt;::</span>const_iterator it_t<span class="operator"> =</span> trenes<span class="operator">.</span>begin<span class="operator">();</span> it_t<span class="operator"> !=</span> trenes<span class="operator">.</span>end<span class="operator">(); ++</span>it_t<span class="operator">) {</span><span class="type">
    bool</span> almacenado<span class="operator"> =</span><span class="bool"> false</span><span class="operator">;</span><span class="type">
    int</span> i<span class="operator"> =</span><span class="int"> 0</span><span class="operator">;</span><span class="flow">
    while</span><span class="operator"> (</span><span class="operator">not</span> almacenado<span class="operator">) {</span><span class="type">
      int</span> espacios_libres<span class="operator"> =</span> _cocheras<span class="operator">[</span>_prioridades<span class="operator">[</span>i<span class="operator">]].</span><%= link_to('get_espacios_libres', practica_pro2_path(:r => 'get_libre'), remote: true, id: 'get_libre', :'data-type' => :json) %><span class="operator">();</span><span class="flow">
      if</span><span class="operator"> ((*</span>it_t<span class="operator">).</span><%= link_to('get_vagones', practica_pro2_path(:r => 'get_vagones'), remote: true, id: 'get_vagones', :'data-type' => :json) %><span class="operator">().</span>size<span class="operator">() &lt;=</span> espacios_libres<span class="operator">) {</span>
        _cocheras<span class="operator">[</span>_prioridades<span class="operator">[</span>i<span class="operator">]].</span><%= link_to('anadir_vagones', practica_pro2_path(:r => 'anade_vagon_vec'), remote: true, id: 'anade_vagones', :'data-type' => :json) %><span class="operator">((*</span>it_t<span class="operator">).</span><%= link_to('get_vagones', practica_pro2_path(:r => 'get_vagones'), remote: true, id: 'get_vagones1', :'data-type' => :json) %><span class="operator">());</span>
        almacenado<span class="operator"> =</span><span class="bool"> true</span><span class="operator">;
      }</span><span class="flow"> else</span> i<span class="operator">++;
    }
  }
}</span></pre>
</div>