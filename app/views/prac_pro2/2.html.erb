<pre><span class="comment">/** @file Cjt_Cocheras.hpp
 *  @brief Especificacion de la clase Cjt_Cocheras
 */</span><span class="pre">
#ifndef CJT_COCHERAS_HPP
#define CJT_COCHERAS_HPP

#include "Cjt_Trenes.hpp"
#include "Cochera.hpp"
#include "utils.PRO2"
</span><span class="comment">
/*
Clase Cjt_Cocheras
*/
/** @class Cjt_Cocheras
 *  @brief Representa un conjunto de cocheras
 */</span><span class="keyword">
class</span> Cjt_Cocheras<span class="operator"> {</span><span class="keyword">

private</span><span class="operator">:</span><span class="comment">
  /** @brief Lista de cocheras. */</span>
  vector<span class="operator">&lt;</span>Cochera<span class="operator">&gt;</span> _cocheras<span class="operator">;</span><span class="comment">
  /** @brief Lista de cocheras. */</span>
  vector<span class="operator">&lt;</span><span class="type">int</span><span class="operator">&gt;</span> _prioridades<span class="operator">;</span><span class="comment">

  /* Metodos almacenamiento nocturno */
  /** @brief Lee las horas de salida de los trenes para el almacenamiento nocturno del canal estandar de entrada, y devuelve una lista con esos trenes ordenada por hora de llegada.
   *  \pre cierto
   *  \post Retorna una lista de los trenes indicados ordenada por hora de llegada.
   */</span>
  list<span class="operator">&lt;</span>Tren<span class="operator">&gt;</span> get_trenes_almacenamiento_nocturno<span class="operator">(</span><span class="keyword">const</span> Red<span class="operator"> &amp;</span>red<span class="operator">,</span> Cjt_Trenes<span class="operator"> &amp;</span>trenes<span class="operator">)</span><span class="keyword"> const</span><span class="operator">;</span><span class="comment">

  /** @brief Escribe las horas de llegada de los trenes de la lista en el canal estandar de salida.
   *  \pre Los trenes deben haber realizado su ultimo viaje.
   *  \post Las horas de llegada se han escrito en el canal estandar de salida.
   */</span><span class="type">
  void</span> escribir_llegadas<span class="operator">(</span>list<span class="operator">&lt;</span>Tren<span class="operator">&gt; &amp;</span>trenes<span class="operator">)</span><span class="keyword"> const</span><span class="operator">;</span><span class="comment">

  /** @brief Rellena las cocheras con los vagones de los trenes, siguiendo la politica descrita en el enunciado.
   *  Se informara de los trenes y sus respectivas horas de salida por el canal estandar de entrada.
   *  \pre La lista de cocheras esta ordenada por prioridad, y la de trenes por hora de llegada. Todos los trenes caben en las cocheras.
   *  \post Las cocheras contienen los vagones de los trenes indicados.
   */</span><span class="type">
  void</span> rellena_cocheras<span class="operator">(</span><span class="keyword">const</span> list<span class="operator">&lt;</span>Tren<span class="operator">&gt; &amp;</span>trenes<span class="operator">);</span><span class="comment">
  /* Metodos formacion matinal */
  /** @brief Se leen los trenes para la formacion matinal del canal estandar de entrada.
   *  \pre cierto
   *  \post Retorna una lista con los trenes.
   */</span>

  list<span class="operator">&lt;</span>Tren<span class="operator">&gt;</span> get_trenes_formacion_matinal<span class="operator">(</span>Cjt_Trenes<span class="operator"> &amp;</span>trenes<span class="operator">)</span><span class="keyword"> const</span><span class="operator">;</span><span class="comment">
  /** @brief Forma los trenes indicados con los vagones de las vias de las cocheras.
   *  Al terminar, las cocheras quedan sin los vagones que se utilizaron para los trenes.
   *  Los movimientos para formar los trenes se escriben en el canal estandar de salida.
   *  \pre Se garantiza que los trenes se podran formar porque todos sus vagones estan en las cocheras.
   *  \post Se han formado los trenes indicados con los vagones de las cocheras.
   */</span><span class="type">

  void</span> vacia_cocheras<span class="operator">(</span>list<span class="operator">&lt;</span>Tren<span class="operator">&gt; &amp;</span>trenes<span class="operator">);</span><span class="keyword">
public</span><span class="operator">:</span><span class="comment">
  /* Constructora */
  /** @brief Creadora
   *  M es el numero de cocheras.
   *  \pre M &gt; 0
   *  \post El resultado es un conjunto de M cocheras.
   */</span>

  Cjt_Cocheras<span class="operator">(</span><span class="type">int</span> M<span class="operator">);</span><span class="comment">
  /* Modificadoras */
  /** @brief Realiza el almacenamiento nocturno de trenes en el conjunto proporcionado.
   *  Se informara de los trenes y sus respectivas horas de salida por el canal estandar de entrada.
   *  \pre cierto
   *  \post Las cocheras contienen los vagones de los trenes indicados.
   */</span><span class="type">
  void</span> almacenamiento_nocturno<span class="operator">(</span><span class="keyword">const</span> Red<span class="operator"> &amp;</span>red<span class="operator">,</span> Cjt_Trenes<span class="operator"> &amp;</span>trenes<span class="operator">);</span><span class="comment">

  /** @brief Realiza la formacion matinal de trenes pertenecientes al conjunto proporcionado que salen un dia.
   *  Se informara de que trenes salen por el canal estandar de entrada.
   *  \pre Las cocheras se han llenado en una almacenamiento nocturno.
   *  \post Se han formado los trenes indicados con los vagones de las cocheras.
   */</span><span class="type">
  void</span> formacion_matinal<span class="operator">(</span>Cjt_Trenes<span class="operator"> &amp;</span>trenes<span class="operator">);</span><span class="comment">
  /* Lectura y escritura */
  /** @brief Se leen los datos de las cocheras de la red del canal estandar de entrada.
   *  \pre cierto
   *  \post Los datos del parametro implicito son los leidos de la entrada.
   */</span><span class="type">
  void</span> leer_cocheras<span class="operator">();</span><span class="comment">

  /** @brief Escritura de las cocheras.
   *  \pre cierto
   *  \post Los datos de las cocheras se han escrito en el canal estandar de salida.
   */</span><span class="type">
  void</span> escribir_cocheras<span class="operator">();
};</span><span class="pre">
#endif
</span></pre>