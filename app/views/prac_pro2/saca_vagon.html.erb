<script type="text/javascript" language="javascript">$(function() { ajaxify('#mov_via_muerta'); ajaxify('#mov_via_aux'); ajaxify('#cuenta_mov'); ajaxify('#cuenta_mov2'); adjust_overflow(); });</script>
<div style="text-align:left; padding:0px 15px 0px 15px;">
<pre><span class="comment">/** @brief Saca el vagon indicado de la via muerta, o de la auxiliar, segun cual sea la que toma menos movimientos.
 *  Si el vagon no se encuentra en ninguna de las vias, devuelve 'false'; si no, devuelve 'true'.
 *  Los movimientos ejecutados en caso de hallarse el vagon se almacenan en 'movimientos'.
 *  \pre cierto
 *  \post Retorna si el vagon se saco de alguna de las vias.
 */</span><span class="type">
bool</span> Cochera<span class="operator">::</span>saca_vagon<span class="operator">(</span><span class="type">int</span> vagon<span class="operator">,</span> stack<span class="operator">&lt;</span><span class="type">int</span><span class="operator">&gt; &amp;</span>via_auxiliar<span class="operator">,</span> Movimientos<span class="operator"> &amp;</span>movimientos<span class="operator">) {</span><span class="type">
  bool</span> sacado<span class="operator"> =</span><span class="bool"> false</span><span class="operator">;</span><span class="comment">
  // Cuenta de los movimientos necesarios para llegar al vagon buscado en ambas vias
</span><span class="type">  int</span> movimientos_via_muerta<span class="operator"> =</span> <%= link_to('cuenta_movimientos', practica_pro2_path(:r => 'cuenta_mov'), remote: true, id: 'cuenta_mov', :'data-type' => :json) %><span class="operator">(</span>vagon<span class="operator">,</span> _via_muerta<span class="operator">,</span><span class="int"> 0</span><span class="operator">);</span><span class="type">
  int</span> movimientos_via_auxiliar<span class="operator"> =</span> <%= link_to('cuenta_movimientos', practica_pro2_path(:r => 'cuenta_mov'), remote: true, id: 'cuenta_mov2', :'data-type' => :json) %><span class="operator">(</span>vagon<span class="operator">,</span> via_auxiliar<span class="operator">,</span><span class="int"> 0</span><span class="operator">);</span><span class="comment">
  // booleanos para controlar la accion
</span><span class="type">  bool</span> via_muerta_tiene<span class="operator"> =</span> movimientos_via_muerta<span class="operator"> &lt;</span> _via_muerta<span class="operator">.</span>size<span class="operator">();</span><span class="type">
  bool</span> via_auxiliar_tiene<span class="operator"> =</span> movimientos_via_auxiliar<span class="operator"> &lt;</span> via_auxiliar<span class="operator">.</span>size<span class="operator">();</span><span class="flow">
  if</span><span class="operator"> (</span>via_muerta_tiene<span class="operator"> or</span> via_auxiliar_tiene<span class="operator">) {</span><span class="comment">
    // Si ambas vias tienen el vagon, hay que pillarlo de la que menos movimientos se necesiten; si no, de la que lo tenga
    // Hay que sumar 1 a los movimientos de la via muerta puesto que hay que contar el movimiento final de pasar el vagon al tren
    // Hay que sumar 2 a los movimientos de la via auxiliar porque hay que contar el movimiento de pasar el vagon a la via muerta, y el de pasarlo al tren
</span><span class="type">    bool</span> ambas_tienen<span class="operator"> =</span> via_muerta_tiene<span class="operator"> and</span> via_auxiliar_tiene<span class="operator">;</span><span class="flow">
    if</span><span class="operator"> ( (</span>ambas_tienen<span class="operator"> and</span> movimientos_via_muerta<span class="operator"> +</span><span class="int"> 1</span><span class="operator"> &lt;</span> movimientos_via_auxiliar<span class="operator"> +</span><span class="int"> 2</span><span class="operator">)</span><span class="operator"> or</span><span class="operator">
        (</span>via_muerta_tiene<span class="operator"> and not</span> via_auxiliar_tiene<span class="operator">) )</span>
      <%= link_to('mueve_desde_via_muerta', practica_pro2_path(:r => 'mov_via_muerta'), remote: true, id: 'mov_via_muerta', :'data-type' => :json) %><span class="operator">(</span>vagon<span class="operator">,</span> via_auxiliar<span class="operator">,</span> movimientos<span class="operator">);</span><span class="flow">
    else</span> <%= link_to('mueve_desde_via_auxiliar', practica_pro2_path(:r => 'mov_via_aux'), remote: true, id: 'mov_via_aux', :'data-type' => :json) %><span class="operator">(</span>vagon<span class="operator">,</span> via_auxiliar<span class="operator">,</span> movimientos<span class="operator">);</span>
    sacado<span class="operator"> =</span><span class="bool"> true</span><span class="operator">;
  }</span><span class="flow">
  return</span> sacado<span class="operator">;
}</span></pre>
</div>